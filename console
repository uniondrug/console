#!/usr/bin/env php
<?php
/**
 * 控制台入口
 *
 * @author    XueronNi <xueronni@uniondrug.cn>
 * @copyright 2018
 */
set_time_limit(0);
date_default_timezone_set('PRC');

$root = __detectRoot();

// autoload composer
foreach ([
             $root . '/vendor/autoload.php',
             __DIR__ . '/../../autoload.php',
             __DIR__ . '/../vendor/autoload.php',
             __DIR__ . '/vendor/autoload.php',
         ] as $value) {
    if (file_exists($value)) {
        define('COMPOSER_INSTALL', $value);
        break;
    }
}

if (!defined('COMPOSER_INSTALL')) {
    fwrite(STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

include COMPOSER_INSTALL;

use Uniondrug\Framework\Application;
use Uniondrug\Framework\Container;
use Uniondrug\Console\Console;

/**
 * This code
 *
 * __DIR__ . '/app'
 *
 * is test code.
 */
try {
    // Process --env -e
    __parseEnv();

    $container = new Container($root);
    $application = (new Application($container))->boot();
    $console = new Console($container);

    $console->run();
} catch (Throwable $e) {
    echo PHP_EOL;
    echo "Error: " . $e->getMessage() . PHP_EOL;
    //echo PHP_EOL;
    echo " File: " . $e->getFile() . PHP_EOL;
    echo " Line: " . $e->getLine() . PHP_EOL;
    echo PHP_EOL;
    echo "Trace:" . PHP_EOL;
    echo $e->getTraceAsString();
    echo PHP_EOL;
}

function __parseEnv()
{
    $env = 'development';
    $args = $_SERVER['argv'];
    array_shift($args);
    while ($token = array_shift($args)) {
        if ($token == '-e') {
            if ($inputEnv = array_shift($args)) {
                $env = $inputEnv;
                break;
            }
        }
        if (0 === strpos($token, '--env')) {
            if (false !== $pos = strpos($token, '=')) {
                $inputEnv = substr($token, $pos + 1);
                if ($inputEnv) {
                    $env = $inputEnv;
                    break;
                }
            }
        }
    }
    putenv("APP_ENV=$env");
}

function __detectRoot()
{
    $cwd = getcwd();
    $script = $_SERVER['SCRIPT_FILENAME'];
    if (substr($script, 0, 1) != DIRECTORY_SEPARATOR) {
        $script = $cwd . DIRECTORY_SEPARATOR . $script;
    }
    $rootPath = dirname($script);
    while (!file_exists($rootPath . DIRECTORY_SEPARATOR . 'app')) {
        $rootPath = dirname($rootPath);
        if ($rootPath == DIRECTORY_SEPARATOR) {
            echo PHP_EOL;
            echo "Error: Cannot detect app root" . PHP_EOL;
            echo PHP_EOL;
            exit;
        }
    }
    return $rootPath;
}